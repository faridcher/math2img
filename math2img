#!/usr/bin/bash
# shopt -s globstar nocasematch nocaseglob extglob

# Convert a Github Flavoured Markdown (GFM) document with TeX equations to another GFM with equations rendered as PNG images and referenced in the GFM
# STDIN: a GFM markdown file
# ARGS: output dir
# STDOUT: a new GFM markdown with equations replaced with their references to png files in output dir
# Example: math2img eqn <gfm.md
math2img(){
  # assume no space in OUTDIR
  # [ $# -ne 2 ] && echo "two arguments are needed; received $#" >&2 && return 1
  local DIR=$(dirname "$0")
  local OUTDIR=$1
  # get formulas with sed; generate PNGs and replace with img links
  # ' instead of " for sed expression to inhibit bash expansions of $, !, etc.
  # echo \'\\\\\'\' or "'\\\''" is '\\''; sed uses first \ to escape the second
  # we want this in the sed expression: bash -ic '_m2i '\\''$$EQN$$'\\'' dir'
  # for inline eqn, quote non-equation text to prevent expansions: 'this is tex '$eqn$' and more text'
  # $P&$A or $P\2$A
  # interactive bash calls stty -ixon and gives "Inappropriate ioctl for device" warning. 
  local P="bash -c 'source "$DIR"/math2img; _m2i '\\\''" 
  local A="'\\\'' $OUTDIR'"
  local B='(\$\$[^$]*|\\begin\{(align|multiline|equation|displaymath).?\})'
  local E='(\$\$|\\end\{(align|multiline|equation|displaymath).?\})'
  local EXPR=''
  if [ $# -eq 1 ]; then
    sed -E -f expr.sed
  else
   echo "one arguments is needed as output dir; received $#" >&2 && return 1
  fi
}

# Generate PNG from a LaTeX equation and write it to a directory
# ARGS: A LateX equation and an output directory
# STDOUT: Markdown text pointing to the generated png file
# Example: _m2i eqn "$\theta^2+\sum_{i=1}^n$"
_m2i(){
  [ $# -ne 2 ] && echo "two arguments are needed; received $#" >&2 && return 1
  local MATH=$1 OUTDIR=$2
  [ -e $OUTDIR ] || mkdir -p $OUTDIR
  # generate a filename by summarizing the equation with sum (16bit checksum)
  FNAME=$(echo "$MATH" | cksum | cut -f 1 -d ' ' | paste -d '' - )
  [ -e $OUTDIR/$FNAME.pdf ] || \
    \pdflatex -halt-on-error -output-directory $OUTDIR -jobname $FNAME \
    "\def\formula{$MATH}\input{$DIR/math.tex}" > /dev/null
  [ -e $OUTDIR/$FNAME.pdf ] || {
    # the $MATH is executed again in sed expression and is prone to expansions
    echo 'ERROR:' "$MATH" ' '
    grep '^!' -A 1 $OUTDIR/$FNAME.log
    return 1
  }
  [ -e $OUTDIR/$FNAME.png ] || \
    convert -density 150 $OUTDIR/$FNAME.pdf -quality 90 $OUTDIR/$FNAME.png &> /dev/null
  echo "![]($OUTDIR/$FNAME.png)"
}

math2img "$@"
